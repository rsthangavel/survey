{"version":3,"sources":["D:/survey/src/$_gendir lazy","D:/survey/src/app/app.component.css","D:/survey/src/app/app.component.html","D:/survey/src/app/app.component.ts","D:/survey/src/app/app.module.ts","D:/survey/src/app/create-card/create-card.component.css","D:/survey/src/app/create-card/create-card.component.html","D:/survey/src/app/create-card/create-card.component.ts","D:/survey/src/core/store.ts","D:/survey/src/environments/environment.ts","D:/survey/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/survey/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".card{\\r\\n    margin-bottom : 10px;\\r\\n}\\r\\n.mat-mini-fab{\\r\\n    margin: 28px 0px 0px 10px;\\r\\n}\\r\\n.answer{\\r\\n    margin : 7px 0 0px 53px;\\r\\n}\\r\\n.mat-raised-button{\\r\\n    margin-top: 20px;\\r\\n}\\r\\n.underline{\\r\\n    text-decoration: underline;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/survey/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"\\r\\n<mat-toolbar color=\\\"primary\\\">My App</mat-toolbar>\\r\\n<div class=\\\"row\\\">\\r\\n\\r\\n  <!--question card dynamically created  -->\\r\\n<div class=\\\"col-md-6\\\">\\r\\n  <div *ngFor=\\\"let card of cards; let i= index\\\" >    \\r\\n    <app-create-card [cardNumber]=\\\"i+1\\\" (currentCardNumber)=\\\"removeCard($event)\\\"></app-create-card>  \\r\\n  </div>\\r\\n  <button mat-raised-button color=\\\"accent\\\" (click)=\\\"addAnotherCard()\\\">Add Another</button>\\r\\n</div>\\r\\n\\r\\n<!-- Finall question answer result -->\\r\\n<div class=\\\"col-md-6 well\\\">\\r\\n  <div class=\\\"col-md-offset-3 col-md-8\\\">\\r\\n  <mat-form-field>\\r\\n    <input matInput placeholder=\\\"Enter Doctor Name\\\">\\r\\n  </mat-form-field>\\r\\n  <mat-form-field>\\r\\n    <input matInput placeholder=\\\"Enter Hospital Name\\\">\\r\\n  </mat-form-field>\\r\\n  <mat-form-field>\\r\\n    <input matInput placeholder=\\\"Specialist\\\">\\r\\n  </mat-form-field>\\r\\n  <mat-form-field>\\r\\n    <input matInput placeholder=\\\"Enter Question\\\">\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n<h3 style=\\\"text-align:center\\\">Created Question & Answer list</h3>   \\r\\n\\r\\n<div *ngFor=\\\"let data of outputData; let i=index\\\">\\r\\n  <pre class=\\\"col-md-10\\\">{{i+1}})&nbsp;<strong>{{data.question}}?</strong><p class=\\\"answer\\\">{{data.answer}}</p>\\r\\n    <code class=\\\"underline\\\">Sub Question Answers</code>\\r\\n    <div *ngFor=\\\"let subquestion of data.subQuestionAnswer; let i=index\\\">\\r\\n      <strong>{{i+1}})&nbsp;{{subquestion.question}}?</strong>\\r\\n      <p class=\\\"answer\\\">{{subquestion.answer}}</p>\\r\\n    </div>\\r\\n  </pre>\\r\\n  <button type=\\\"button\\\" mat-mini-fab color=\\\"warn\\\" class=\\\"col-md-2\\\" (click)=\\\"removeQuestion(i)\\\">\\r\\n    <mat-icon class=\\\"md-24\\\" aria-label=\\\"\\\">remove</mat-icon>\\r\\n  </button>\\r\\n</div>\\r\\n<button *ngIf=\\\"outputData[0]\\\" class=\\\"col-md-3 col-md-offset-10\\\" mat-raised-button color=\\\"accent\\\">Submit</button> \\r\\n </div>\\r\\n \\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/survey/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormArray} from '@angular/forms';\r\nimport { Store } from '@ngrx/store';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  surveyForm : FormGroup;\r\n  currentCard: number = 1; \r\n  outputData; \r\n  cards = [this.currentCard];\r\n   constructor(private _fb:FormBuilder,\r\n               private _store:Store<any>){}\r\n  ngOnInit(){\r\n    this._store.select('form').subscribe(data=>{\r\n      console.log(data);\r\n     this.outputData =data;\r\n    })\r\n  }\r\n  addAnotherCard(){\r\n    this.currentCard+=1;\r\n   this.cards.push(this.currentCard);\r\n   \r\n  }\r\n  removeQuestion(i: number){\r\n    this._store.dispatch({\r\n      type: 'REMOVE QUESTION',\r\n      payload : i\r\n    })\r\n  }\r\n  removeCard(e){\r\n   \r\n    this.cards.splice(e-1,1);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/survey/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { MatToolbarModule, MatCardModule, MatFormFieldModule, MatInputModule,\r\nMatCheckboxModule, MatRadioModule, MatButtonModule, MatIconModule, MatGridListModule} from '@angular/material';\r\nimport { CreateCardComponent } from './create-card/create-card.component';\r\nimport { StoreModule} from '@ngrx/store';\r\nimport { FormReducer } from '../core/store';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CreateCardComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    StoreModule.provideStore({form: FormReducer}),\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatCheckboxModule,\r\n    MatRadioModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatGridListModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// D:/survey/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".question{\\r\\n    width : 80%;\\r\\n    margin-left: 10%;\\r\\n}\\r\\n.mat-radio-button {\\r\\n    margin-left: 60px;\\r\\n}\\r\\n.mat-card-actions{\\r\\n    width: 100px;\\r\\n    margin : 0 0 0 auto;\\r\\n}\\r\\n\\r\\n.mat-card{\\r\\n    background-color: lightgray;\\r\\n    margin: 20px 0 20px;\\r\\n}\\r\\n.mat-mini-fab{\\r\\n    position : relative;\\r\\n    top : 35px;\\r\\n}\\r\\n.mat-checkbox{\\r\\n    margin-left :30px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/survey/src/app/create-card/create-card.component.css\n// module id = ../../../../../src/app/create-card/create-card.component.css\n// module chunks = main","module.exports = \"<mat-card>\\r\\n  <mat-card-header>\\r\\n    <mat-card-title>QUESTION {{cardNumber}}</mat-card-title>\\r\\n  </mat-card-header>\\r\\n\\r\\n  <form [formGroup]=\\\"surveyForm\\\" (ngSubmit)=\\\"save(surveyForm)\\\">\\r\\n    <mat-card-content>\\r\\n      1\\r\\n          <mat-form-field  class=\\\"row question\\\">\\r\\n            <input matInput placeholder=\\\"Enter Question\\\"  formControlName=\\\"question\\\">\\r\\n          </mat-form-field>    \\r\\n          <mat-radio-group formControlName=\\\"answer\\\" class=\\\"row\\\">\\r\\n            <mat-radio-button value=\\\"Yes\\\">Yes</mat-radio-button>\\r\\n            <mat-radio-button value=\\\"No\\\">No</mat-radio-button>\\r\\n            <mat-checkbox  (click)=\\\"answerField = !answerField\\\">Others</mat-checkbox>\\r\\n            <mat-form-field *ngIf=\\\"answerField\\\">  \\r\\n              <input matInput placeholder=\\\"Enter Answer\\\" formControlName=\\\"answer\\\"> \\r\\n            </mat-form-field>\\r\\n          </mat-radio-group>\\r\\n          <div formArrayName=\\\"subQuestionAnswer\\\"> \\r\\n            <div *ngFor=\\\"let question of surveyForm['controls'].subQuestionAnswer['controls']; let i=index\\\">\\r\\n              {{i+2}}\\r\\n              <div [formGroupName]=\\\"i\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                <mat-form-field class=\\\"question\\\">\\r\\n                    <input matInput placeholder=\\\"Enter Question\\\" formControlName=\\\"question\\\"> \\r\\n                   \\r\\n                  </mat-form-field>\\r\\n                  <button type=\\\"button\\\" mat-mini-fab color=\\\"warn\\\" (click)=\\\"removeSubQuestion(i)\\\">\\r\\n                      <mat-icon class=\\\"md-24\\\" aria-label=\\\"Example icon-button with a heart icon\\\">remove</mat-icon>\\r\\n                    </button>\\r\\n                  </div>\\r\\n                  <mat-radio-group formControlName=\\\"answer\\\" class=\\\"row\\\">\\r\\n                      <mat-radio-button value=\\\"Yes\\\">Yes</mat-radio-button>\\r\\n                      <mat-radio-button value=\\\"No\\\">No</mat-radio-button>\\r\\n                      <mat-checkbox (click)=\\\"answerField = !answerField\\\">Others</mat-checkbox>\\r\\n                      <mat-form-field *ngIf=\\\"answerField\\\">  \\r\\n                          <input matInput placeholder=\\\"Enter Answer\\\" formControlName=\\\"answer\\\"> \\r\\n                        </mat-form-field>\\r\\n                  </mat-radio-group>\\r\\n                \\r\\n               \\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n         \\r\\n    </mat-card-content>\\r\\n    <button type=\\\"button\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"addSubQuestion()\\\">\\r\\n      <mat-icon class=\\\"md-24\\\" aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\r\\n    </button>\\r\\n    <mat-card-actions>\\r\\n      <button type=\\\"submit\\\"  mat-raised-button color=\\\"accent\\\">Save</button>\\r\\n    </mat-card-actions>\\r\\n       \\r\\n  </form>\\r\\n</mat-card>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/survey/src/app/create-card/create-card.component.html\n// module id = ../../../../../src/app/create-card/create-card.component.html\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormArray} from '@angular/forms';\r\nimport { Store } from '@ngrx/store';\r\n@Component({\r\n  selector: 'app-create-card',\r\n  templateUrl: './create-card.component.html',\r\n  styleUrls: ['./create-card.component.css']\r\n})\r\nexport class CreateCardComponent implements OnInit {\r\n  @Input() cardNumber ;\r\n  @Output() currentCardNumber:EventEmitter<number>  = new EventEmitter<number>();\r\n  surveyForm : FormGroup;\r\n  answerField : boolean = false;\r\n  constructor(private _fb:FormBuilder,\r\n              private _store:Store<any>){}\r\n  ngOnInit(){\r\n    \r\n    this.surveyForm = this._fb.group({\r\n      name   : [''],\r\n      question : ['', [Validators.required]],\r\n      answer : ['', Validators.required],\r\n      subQuestionAnswer : this._fb.array([])\r\n    })\r\n  }\r\n  addSubQuestion(){\r\n    const control = <FormArray>this.surveyForm.controls['subQuestionAnswer'];\r\n    const addQuestion =  this._fb.group({\r\n        question : ['', Validators.required],\r\n        answer   : ['', Validators.required]\r\n      });\r\n    \r\n    control.push(addQuestion);\r\n  }\r\n  removeSubQuestion(i:number){\r\n    const control = <FormArray>this.surveyForm.controls['subQuestionAnswer'];\r\n    control.removeAt(i);\r\n  }\r\n  addAnswerField(i:number){\r\n    \r\n  }\r\n  save(form){\r\n  console.log(form.value);\r\n  this._store.dispatch({\r\n    type: 'ADD QUESTION',\r\n    payload : form.value\r\n  });\r\n  console.log(this.cardNumber);\r\n  this.currentCardNumber.emit(this.cardNumber);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/survey/src/app/create-card/create-card.component.ts","import { Action } from '@ngrx/store';\r\n\r\n\r\nexport function FormReducer(state: any[]= [], action: Action){\r\n  switch(action.type){\r\n    case 'ADD QUESTION':\r\n       return [...state, action.payload];\r\n    case 'REMOVE QUESTION':\r\n       state = state.filter((array, index)=>{\r\n          if(index !== action.payload){\r\n                 return true;\r\n          }\r\n          else { return false;}\r\n        })\r\n        return [...state]; \r\n      \r\n    case 'Update Question':\r\n    default :\r\n      return state;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/survey/src/core/store.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// D:/survey/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// D:/survey/src/main.ts"],"sourceRoot":"webpack:///"}